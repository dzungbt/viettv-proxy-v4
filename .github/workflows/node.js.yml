# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
jobs:
  build_sg:
    runs-on: [self-hosted, proxy-v4-sg]
    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    env:
      NODE_IS_ROOT: 1
      PARENT_URL: 
      TOKEN: ${{secrets.PROXY_V4_TOKEN}}
    steps:
    - uses: actions/checkout@v3
      with:
        ref: 'master'
    - name: Create .env file
      run: echo "NODE_IS_ROOT=1" > .env
    - name: Update PARENT_URL
      run: echo "PARENT_URL=''" > .env
    - name: Update TOKEN .env
      run: echo "TOKEN=${{secrets.PROXY_V4_TOKEN}}" >> .env
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm i --init-module
  
  deploy_sg:
    needs: build_sg
    runs-on: [self-hosted, proxy-v4-sg]
    steps:
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.1.0
      continue-on-error: true
      with:
        host: ${{ secrets.PROXY_V4_SG_HOST }}
        username: ${{ secrets.PROXY_V4_SG_USERNAME }}
        password: ${{ secrets.PROXY_V4_SG_PW }}
        port: ${{ secrets.PROXY_V4_SG_PORT }}
        script: bash ${{ secrets.PROXY_V4_SG_EXECUTE_PATH }}/.github/workflows/reexecute.sh
        command_timeout: 1m
        script_stop: true

  build_de:
    runs-on: [self-hosted, proxy-v4-de]
    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    env:
      NODE_IS_ROOT: 1
      PARENT_URL: 
      TOKEN: ${{secrets.PROXY_V4_TOKEN}}
    steps:
    - uses: actions/checkout@v3
      with:
        ref: 'master'
    - name: Create .env file
      run: echo "NODE_IS_ROOT=1" > .env
    - name: Update PARENT_URL
      run: echo "PARENT_URL=''" > .env
    - name: Update TOKEN .env
      run: echo "TOKEN=${{secrets.PROXY_V4_TOKEN}}" >> .env
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm i --init-module
    # - name: Run reexecute.sh
    #   run: bash .github/workflows/reexecute.sh
  
  deploy_de:
    needs: build_de
    runs-on: [self-hosted, proxy-v4-de]
    steps:
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.1.0
      continue-on-error: true
      with:
        host: ${{ secrets.PROXY_V4_DE_HOST }}
        username: ${{ secrets.PROXY_V4_DE_USERNAME }}
        password: ${{ secrets.PROXY_V4_DE_PW }}
        port: ${{ secrets.PROXY_V4_DE_PORT }}
        command_timeout: 1m
        script: |
          bash ${{ secrets.PROXY_V4_DE_EXECUTE_PATH }}/.github/workflows/reexecute.sh
          echo 'Deploy de done'
          exit

